# -- overwrite the chart name
namePrefix: REPLACEME
serviceAccountName: default
# set to true to force redeploy for each release upgrade
# this is done by giving a random value to the annotations
alwaysRedeploy: false
# image tag to use for all containers that are not provided with a tag
versionTag: VERSION_TAG
# Added as env var ENVIRONMENT to all containers
environment: development
# Added as env var TZ to all containers
timezone: Asia/Singapore
# Labels for all generated resources
labels: {}
# Annotations for all generated resources
annotations:
  gic.com.sg/owner: appsfactory

# global defaults for podSpec
imagePullSecrets:
   - name: REPLACEME
env: []
podSecurityContext: {}
containerSecurityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
volumes: []    # volumes to concat to all deployments/batches
resources: {}  # resource to use if not specified in resource

# Configuration for the logger extension
logger:
  image: jfrogprod.gic.com.sg/openshift-43/fluentd-kubernetes-daemonset
  tag: v1.7.3-debian-cloudwatch-1.0
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 200Mi
  fluentConf: |-
    <source>
      @type tail
      @log_level debug
      path "#{ENV['LOG_PATH']}/*.log"
      exclude_path "[\"#{ENV['LOG_PATH']}/*.gz\", \"/other-path/*.other-ext\"]"
      pos_file "#{ENV['LOG_PATH']}/td-agent/apps.pos"
      tag apps-logs
      read_from_head true
      <parse>
        @type none
      </parse>
    </source>
    <match apps-logs>
      @type cloudwatch_logs
      log_group_name "#{ENV['LOG_GROUP_NAME']}"
      log_stream_name "#{ENV['LOG_STREAM_NAME']}"
      auto_create_stream true
      region "#{ENV['AWS_REGION']}"

      include_time_key true
      localtime true
      log_rejected_request true
    </match>

# Configuration for the conjur extension
conjur:
  enable: true
  mode: sidecar
  name: conjur
  image: jfrogprod.gic.com.sg/openshift-43/cyberark/conjur-authn-k8s-client
  tag: latest
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi  
  version: 5
  entrypoints:
    sidecar: >
      cat /run/conjur/summon-binary?? > /run/conjur/summon-conjur.tar.gz
      && tar -zxf /run/conjur/summon-conjur.tar.gz -C /run/conjur/
      && chmod +x /run/conjur/summon /run/conjur/summon-conjur
      && authenticator
    main: /run/conjur/summon -f /run/conjur/secret.yaml $ENTRY_POINT
  secretYaml: |-
    SYSTEMACCT: REPLACEME
    SYSTEMACCTPW: REPLACEME

deployments:
  REPLACEME:
    image: jfrogprod.gic.com.sg/ASSET_NAME-docker/REPO_NAME
    imagePullPolicy: Always
    conjur:
      enable: true
    logger:
      enable: true
    ports:
      - name: http
        containerPort: 8080
        protocol: TCP
    command: ["REPLACEME"]
    livenessProbe:
      httpGet:
        path: /REPLACEME
        port: 8080
        scheme: HTTP
      timeoutSeconds: 10
      periodSeconds: 60
      successThreshold: 1
      failureThreshold: 1
    # remember that list are replace instead of merged
    env:
    resources:
      limits:
        cpu: 1.6
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 1Gi
    mountX:
    service:
      create: true
      ports:
        - port: 8080
          targetPort: http
          protocol: TCP
          name: http
    autoscaling:
      enable: true
      minReplicas: 4
      maxReplicas: 8
      # average utilization cpu and memory
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 90
      # any additional/custom metrics
      metrics: []
      # any extra custom fields - e.g. "behavior" for "autoscaling/v2beta2"
      extras: {}

# create configmaps
configMaps:
  appsettings:
    create: true
    data:
      appsettings.json: |-
        {
          REPLACEME
        }
